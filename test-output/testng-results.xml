<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="7" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="65" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
    <groups>
    </groups>
    <test name="Test" duration-ms="65" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
      <class name="LearnTestNG.DemoB">
        <test-method status="PASS" signature="beforeSuit()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="beforeSuit" is-config="true" duration-ms="10" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuit -->
        <test-method status="PASS" signature="beforetest()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="beforetest" is-config="true" duration-ms="0" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="beforeclass" is-config="true" duration-ms="1" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="beforemethod" is-config="true" duration-ms="0" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="method3()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="method3" duration-ms="6" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[I am method no3 and I will Fail!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: I am method no3 and I will Fail!
at org.testng.Assert.fail(Assert.java:97)
at LearnTestNG.DemoB.method3(DemoB.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method3 -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="aftermethod" is-config="true" duration-ms="0" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="beforemethod" is-config="true" duration-ms="1" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="method1()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="method1" duration-ms="1" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="aftermethod" is-config="true" duration-ms="0" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="beforemethod" is-config="true" duration-ms="0" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="method1()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="method1" duration-ms="1" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="aftermethod" is-config="true" duration-ms="0" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="method1()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="method1" duration-ms="1" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="beforemethod" is-config="true" duration-ms="0" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="aftermethod" is-config="true" duration-ms="1" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="method5(java.lang.String, java.lang.String)[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="method5" duration-ms="1" started-at="2019-09-27T03:14:55 PDT" data-provider="getdata" finished-at="2019-09-27T03:14:55 PDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method5 -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="beforemethod" is-config="true" duration-ms="0" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="aftermethod" is-config="true" duration-ms="1" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="beforemethod" is-config="true" duration-ms="0" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="method5(java.lang.String, java.lang.String)[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="method5" duration-ms="1" started-at="2019-09-27T03:14:55 PDT" data-provider="getdata" finished-at="2019-09-27T03:14:55 PDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method5 -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="aftermethod" is-config="true" duration-ms="0" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="SKIP" signature="method4()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="method4" duration-ms="0" started-at="2019-09-27T03:14:55 PDT" depends-on-methods="LearnTestNG.DemoB.method3" finished-at="2019-09-27T03:14:55 PDT">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DemoB.method4()[pri:0, instance:LearnTestNG.DemoB@3dd4520b] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DemoB.method4()[pri:0, instance:LearnTestNG.DemoB@3dd4520b] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method4 -->
        <test-method status="PASS" signature="afterclass()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="afterclass" is-config="true" duration-ms="0" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method status="PASS" signature="aftertest()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="aftertest" is-config="true" duration-ms="0" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
        <test-method status="PASS" signature="aftersuite()[pri:0, instance:LearnTestNG.DemoB@3dd4520b]" name="aftersuite" is-config="true" duration-ms="1" started-at="2019-09-27T03:14:55 PDT" finished-at="2019-09-27T03:14:55 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- LearnTestNG.DemoB -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
